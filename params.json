{
  "name": "Komada",
  "tagline": "Komada: Croatian for `pieces`, is a modular bot system including reloading modules and easy to use custom commands.",
  "body": "# Komada\r\n\r\n[![Discord](https://discordapp.com/api/guilds/234357395646578688/embed.png)](https://discord.gg/bRCvFy9)\r\n[![npm](https://img.shields.io/npm/v/komada.svg?maxAge=3600)](https://www.npmjs.com/package/komada)\r\n[![npm](https://img.shields.io/npm/dt/komada.svg?maxAge=3600)](https://www.npmjs.com/package/komada)\r\n[![David](https://img.shields.io/david/eslachance/komada.svg?maxAge=3600)](https://david-dm.org/eslachance/komada)\r\n\r\n> \"Stay a while, and listen!\"\r\n\r\nKomada is a modular framework for bots built on top of [Discord.js](https://github.com/hydrabolt/dicord.js). It offers an extremely easy installation, downloadable commands, and a framework to build your own commands, modules, and functions.\r\n\r\n## Installing Komada\r\n\r\nTime to take the plunge! Komada is on NPM and can be easily installed.\r\n\r\n> I assume you know how to open a command prompt in a folder where you want to install this. Please don't prove me wrong.\r\n\r\n```\r\nnpm install --save komada\r\n```\r\n\r\nCreate a file called `app.js` (or whatever you prefer) which will initiate and configure Komada.\r\n\r\n```js\r\nconst komada = require('komada');\r\nkomada.start({\r\n  \"botToken\": \"your-bot-token\",\r\n  \"ownerid\" : \"your-user-id\",\r\n  \"clientID\": \"the-invite-app-id\",\r\n  \"prefix\": \"+\",\r\n  \"functions\": [],\r\n  \"commandInhibitors\": [\"disable\", \"permissions\", \"missingBotPermissions\"],\r\n  \"dataHandlers\": [],\r\n  \"clientOptions\": {\r\n    forceFetchUsers: true\r\n  }\r\n});\r\n```\r\n\r\nThen, run the following in your folder:\r\n\r\n```\r\nnpm install\r\nnode app.js\r\n```\r\n\r\n> Requires Node 6 or higher (because discord.js requires that), also requires Discord.js v10 (currently #indev), installed automatically with `npm install`.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}